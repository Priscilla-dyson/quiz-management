// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl=env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  quizzes   Quiz[]    @relation("QuizCreator")
  attempts  Attempt[]
}

model Quiz {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  passMark    Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  questions   Question[]
  creator     User        @relation("QuizCreator", fields: [creatorId], references: [id])
  creatorId   Int
  attempts    Attempt[]
}

model Question {
  id        Int      @id @default(autoincrement())
  text      String
  options   String[]
  answer    String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  quizId    Int
}

model Attempt {
  id        Int      @id @default(autoincrement())
  score     Int
  passed    Boolean
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  quiz   Quiz @relation(fields: [quizId], references: [id])
  quizId Int
}

enum Role {
  ADMIN
  STUDENT
}
